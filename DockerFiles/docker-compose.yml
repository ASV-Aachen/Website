version: '3.3'

networks:
  # enable connection with Traefik
  traefik:
    external: true
  # network for the app
  backend:



services:
  #---------------------------------------
  # Proxy
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Only for development environment
      - --log.level=DEBUG
      - --api.insecure=true
      # Get Docker as the provider
      - --providers.docker=true
      # Avoid that all containers are exposed
      - --providers.docker.exposedbydefault=false
      # Settle the ports for the entry points
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
    ports:
      # The HTTP port
      - "80:80"
      # HTTPS
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # Store certificates in ./letsencrypt/acme.json
      - /Docker/letsencrypt:/letsencrypt
      - /Docker/Proxy:/config
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  #---------------------------------------
  # Datenbank
  db:
    image: mysql
    environment:
      MYSQL_Name: TESTDB
      MYSQL_User: Webpage
      MYSQL_PASSWORD: IMATESTPAGE
      MYSQL_ROOT_PASSWORD: my-secret-pw
    volumes:
      - /Docker/DB:/var/lib/mysql
    restart: always
    networks:
      - backend

  #---------------------------------------
  # Wiki
  wiki:
    image: mediawiki
    links:
      - db
    volumes:
      - /Docker/wiki:/var/lib/MediaWiki
    restart: always
    depends_on:
      - db
      - reverse-proxy
    ports:
      - 4150:80
    networks:
      - traefik
      - backend
    labels:
        # The labels are usefull for Traefik only
      - traefik.enable=true
      - traefik.http.routers.wiki.rule=Host(`chrisubuntu`) && Path(`/wiki/`)
      # Tell Traefik to use the port 12345 to connect to `my-container`
      - traefik.http.services.wiki.loadbalancer.server.port=4150

  #---------------------------------------
  # Webpage
  Webpage:
    image: webpageimage:0.1
    restart: always
    command: python manage.py runserver 0.0.0.0:8080
    ports:
      - 4151:8080
    volumes:
      - /Docker/Webpage:/webpage
    depends_on:
      - db
      - reverse-proxy
    networks:
      - traefik
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.wiki.rule=Host(`chrisubuntu`)
      # Tell Traefik to use the port 12345 to connect to `my-container`
      - traefik.http.services.wiki.loadbalancer.server.port=4151


volumes:
  db_data: {}
  wiki_data: {}
  page_data: {}

